Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> list_complete_item
Rule 1     list_complete_item -> complete_item
Rule 2     list_complete_item -> list_complete_item complete_item
Rule 3     complete_item -> complete_settings
Rule 4     complete_item -> complete_rule
Rule 5     complete_item -> complete_component
Rule 6     complete_item -> complete_default
Rule 7     complete_settings -> settings_header name opcode_format includes arguments settings_footer
Rule 8     settings_header -> LBRACKET SETTINGS RBRACKET NEWLINE
Rule 9     name -> DASH NAMESPACE COLON IDENTIFIER NEWLINE
Rule 10    opcode_format -> DASH OPCODE_FORMAT COLON list_formatted_binary_item NEWLINE
Rule 11    includes -> DASH INCLUDES COLON list_includes NEWLINE
Rule 12    list_includes -> IDENTIFIER
Rule 13    list_includes -> list_includes IDENTIFIER
Rule 14    arguments -> DASH ARGUMENTS COLON list_arguments NEWLINE
Rule 15    list_arguments -> IDENTIFIER
Rule 16    list_arguments -> list_arguments IDENTIFIER
Rule 17    settings_footer -> LBRACKET SLASH SETTINGS RBRACKET NEWLINE
Rule 18    complete_rule -> rule_header list_rule_component rule_footer
Rule 19    rule_header -> LBRACKET RULE IDENTIFIER RBRACKET NEWLINE
Rule 20    list_rule_component -> rule_component
Rule 21    list_rule_component -> list_rule_component rule_component
Rule 22    rule_component -> include_statement
Rule 23    rule_component -> exclude_statement
Rule 24    rule_component -> component_statement
Rule 25    include_statement -> DASH INCLUDE COLON list_binary_item NEWLINE
Rule 26    list_binary_item -> binary_item
Rule 27    list_binary_item -> list_binary_item binary_item
Rule 28    binary_item -> BINARY
Rule 29    binary_item -> DASH
Rule 30    exclude_statement -> DASH EXCLUDE COLON list_binary_item NEWLINE
Rule 31    component_statement -> DASH COMPONENT COLON IDENTIFIER NEWLINE
Rule 32    rule_footer -> LBRACKET SLASH RULE RBRACKET NEWLINE
Rule 33    complete_component -> component_header format_statement code_statement component_footer
Rule 34    component_header -> LBRACKET COMPONENT IDENTIFIER RBRACKET NEWLINE
Rule 35    format_statement -> DASH FORMAT COLON list_formatted_binary_item NEWLINE
Rule 36    code_statement -> LCURLY NEWLINE list_cplusplus RCURLY NEWLINE
Rule 37    list_cplusplus -> WHITESPACE CPLUSPLUS NEWLINE
Rule 38    list_cplusplus -> WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE
Rule 39    list_cplusplus -> list_cplusplus WHITESPACE CPLUSPLUS NEWLINE
Rule 40    list_cplusplus -> list_cplusplus WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE
Rule 41    list_bitvariable -> bitvariable
Rule 42    list_bitvariable -> list_bitvariable bitvariable
Rule 43    bitvariable -> TRUE_BITVARIABLE
Rule 44    bitvariable -> FALSE_BITVARIABLE
Rule 45    list_formatted_binary_item -> formatted_binary_item
Rule 46    list_formatted_binary_item -> list_formatted_binary_item formatted_binary_item
Rule 47    formatted_binary_item -> binary_item
Rule 48    formatted_binary_item -> BINARY_VARIABLE
Rule 49    component_footer -> LBRACKET SLASH COMPONENT RBRACKET NEWLINE
Rule 50    complete_default -> default_header code_statement default_footer
Rule 51    default_header -> LBRACKET DEFAULT RBRACKET NEWLINE
Rule 52    default_footer -> LBRACKET SLASH DEFAULT RBRACKET NEWLINE

Terminals, with rules where they appear

ARGUMENTS            : 14
BINARY               : 28
BINARY_VARIABLE      : 48
COLON                : 9 10 11 14 25 30 31 35
COMPONENT            : 31 34 49
CPLUSPLUS            : 37 38 39 40
DASH                 : 9 10 11 14 25 29 30 31 35
DEFAULT              : 51 52
EXCLUDE              : 30
FALSE_BITVARIABLE    : 44
FORMAT               : 35
IDENTIFIER           : 9 12 13 15 16 19 31 34
IF_BEGIN             : 38 40
IF_END               : 38 40
INCLUDE              : 25
INCLUDES             : 11
LBRACKET             : 8 17 19 32 34 49 51 52
LCURLY               : 36
NAMESPACE            : 9
NEWLINE              : 8 9 10 11 14 17 19 25 30 31 32 34 35 36 36 37 38 39 40 49 51 52
OPCODE_FORMAT        : 10
RBRACKET             : 8 17 19 32 34 49 51 52
RCURLY               : 36
RULE                 : 19 32
SETTINGS             : 8 17
SLASH                : 17 32 49 52
TRUE_BITVARIABLE     : 43
WHITESPACE           : 37 38 39 40
error                : 

Nonterminals, with rules where they appear

arguments            : 7
binary_item          : 26 27 47
bitvariable          : 41 42
code_statement       : 33 50
complete_component   : 5
complete_default     : 6
complete_item        : 1 2
complete_rule        : 4
complete_settings    : 3
component_footer     : 33
component_header     : 33
component_statement  : 24
default_footer       : 50
default_header       : 50
exclude_statement    : 23
format_statement     : 33
formatted_binary_item : 45 46
include_statement    : 22
includes             : 7
list_arguments       : 14 16
list_binary_item     : 25 27 30
list_bitvariable     : 38 40 42
list_complete_item   : 2 0
list_cplusplus       : 36 39 40
list_formatted_binary_item : 10 35 46
list_includes        : 11 13
list_rule_component  : 18 21
name                 : 7
opcode_format        : 7
rule_component       : 20 21
rule_footer          : 18
rule_header          : 18
settings_footer      : 7
settings_header      : 7

Parsing method: LALR

state 0

    (0) S' -> . list_complete_item
    (1) list_complete_item -> . complete_item
    (2) list_complete_item -> . list_complete_item complete_item
    (3) complete_item -> . complete_settings
    (4) complete_item -> . complete_rule
    (5) complete_item -> . complete_component
    (6) complete_item -> . complete_default
    (7) complete_settings -> . settings_header name opcode_format includes arguments settings_footer
    (18) complete_rule -> . rule_header list_rule_component rule_footer
    (33) complete_component -> . component_header format_statement code_statement component_footer
    (50) complete_default -> . default_header code_statement default_footer
    (8) settings_header -> . LBRACKET SETTINGS RBRACKET NEWLINE
    (19) rule_header -> . LBRACKET RULE IDENTIFIER RBRACKET NEWLINE
    (34) component_header -> . LBRACKET COMPONENT IDENTIFIER RBRACKET NEWLINE
    (51) default_header -> . LBRACKET DEFAULT RBRACKET NEWLINE

    LBRACKET        shift and go to state 11

    list_complete_item             shift and go to state 1
    complete_item                  shift and go to state 2
    complete_settings              shift and go to state 3
    complete_rule                  shift and go to state 4
    complete_component             shift and go to state 5
    complete_default               shift and go to state 6
    settings_header                shift and go to state 7
    rule_header                    shift and go to state 8
    component_header               shift and go to state 9
    default_header                 shift and go to state 10

state 1

    (0) S' -> list_complete_item .
    (2) list_complete_item -> list_complete_item . complete_item
    (3) complete_item -> . complete_settings
    (4) complete_item -> . complete_rule
    (5) complete_item -> . complete_component
    (6) complete_item -> . complete_default
    (7) complete_settings -> . settings_header name opcode_format includes arguments settings_footer
    (18) complete_rule -> . rule_header list_rule_component rule_footer
    (33) complete_component -> . component_header format_statement code_statement component_footer
    (50) complete_default -> . default_header code_statement default_footer
    (8) settings_header -> . LBRACKET SETTINGS RBRACKET NEWLINE
    (19) rule_header -> . LBRACKET RULE IDENTIFIER RBRACKET NEWLINE
    (34) component_header -> . LBRACKET COMPONENT IDENTIFIER RBRACKET NEWLINE
    (51) default_header -> . LBRACKET DEFAULT RBRACKET NEWLINE

    LBRACKET        shift and go to state 11

    complete_item                  shift and go to state 12
    complete_settings              shift and go to state 3
    complete_rule                  shift and go to state 4
    complete_component             shift and go to state 5
    complete_default               shift and go to state 6
    settings_header                shift and go to state 7
    rule_header                    shift and go to state 8
    component_header               shift and go to state 9
    default_header                 shift and go to state 10

state 2

    (1) list_complete_item -> complete_item .

    LBRACKET        reduce using rule 1 (list_complete_item -> complete_item .)
    $end            reduce using rule 1 (list_complete_item -> complete_item .)


state 3

    (3) complete_item -> complete_settings .

    LBRACKET        reduce using rule 3 (complete_item -> complete_settings .)
    $end            reduce using rule 3 (complete_item -> complete_settings .)


state 4

    (4) complete_item -> complete_rule .

    LBRACKET        reduce using rule 4 (complete_item -> complete_rule .)
    $end            reduce using rule 4 (complete_item -> complete_rule .)


state 5

    (5) complete_item -> complete_component .

    LBRACKET        reduce using rule 5 (complete_item -> complete_component .)
    $end            reduce using rule 5 (complete_item -> complete_component .)


state 6

    (6) complete_item -> complete_default .

    LBRACKET        reduce using rule 6 (complete_item -> complete_default .)
    $end            reduce using rule 6 (complete_item -> complete_default .)


state 7

    (7) complete_settings -> settings_header . name opcode_format includes arguments settings_footer
    (9) name -> . DASH NAMESPACE COLON IDENTIFIER NEWLINE

    DASH            shift and go to state 14

    name                           shift and go to state 13

state 8

    (18) complete_rule -> rule_header . list_rule_component rule_footer
    (20) list_rule_component -> . rule_component
    (21) list_rule_component -> . list_rule_component rule_component
    (22) rule_component -> . include_statement
    (23) rule_component -> . exclude_statement
    (24) rule_component -> . component_statement
    (25) include_statement -> . DASH INCLUDE COLON list_binary_item NEWLINE
    (30) exclude_statement -> . DASH EXCLUDE COLON list_binary_item NEWLINE
    (31) component_statement -> . DASH COMPONENT COLON IDENTIFIER NEWLINE

    DASH            shift and go to state 20

    list_rule_component            shift and go to state 15
    rule_component                 shift and go to state 16
    include_statement              shift and go to state 17
    exclude_statement              shift and go to state 18
    component_statement            shift and go to state 19

state 9

    (33) complete_component -> component_header . format_statement code_statement component_footer
    (35) format_statement -> . DASH FORMAT COLON list_formatted_binary_item NEWLINE

    DASH            shift and go to state 22

    format_statement               shift and go to state 21

state 10

    (50) complete_default -> default_header . code_statement default_footer
    (36) code_statement -> . LCURLY NEWLINE list_cplusplus RCURLY NEWLINE

    LCURLY          shift and go to state 24

    code_statement                 shift and go to state 23

state 11

    (8) settings_header -> LBRACKET . SETTINGS RBRACKET NEWLINE
    (19) rule_header -> LBRACKET . RULE IDENTIFIER RBRACKET NEWLINE
    (34) component_header -> LBRACKET . COMPONENT IDENTIFIER RBRACKET NEWLINE
    (51) default_header -> LBRACKET . DEFAULT RBRACKET NEWLINE

    SETTINGS        shift and go to state 25
    RULE            shift and go to state 26
    COMPONENT       shift and go to state 27
    DEFAULT         shift and go to state 28


state 12

    (2) list_complete_item -> list_complete_item complete_item .

    LBRACKET        reduce using rule 2 (list_complete_item -> list_complete_item complete_item .)
    $end            reduce using rule 2 (list_complete_item -> list_complete_item complete_item .)


state 13

    (7) complete_settings -> settings_header name . opcode_format includes arguments settings_footer
    (10) opcode_format -> . DASH OPCODE_FORMAT COLON list_formatted_binary_item NEWLINE

    DASH            shift and go to state 30

    opcode_format                  shift and go to state 29

state 14

    (9) name -> DASH . NAMESPACE COLON IDENTIFIER NEWLINE

    NAMESPACE       shift and go to state 31


state 15

    (18) complete_rule -> rule_header list_rule_component . rule_footer
    (21) list_rule_component -> list_rule_component . rule_component
    (32) rule_footer -> . LBRACKET SLASH RULE RBRACKET NEWLINE
    (22) rule_component -> . include_statement
    (23) rule_component -> . exclude_statement
    (24) rule_component -> . component_statement
    (25) include_statement -> . DASH INCLUDE COLON list_binary_item NEWLINE
    (30) exclude_statement -> . DASH EXCLUDE COLON list_binary_item NEWLINE
    (31) component_statement -> . DASH COMPONENT COLON IDENTIFIER NEWLINE

    LBRACKET        shift and go to state 34
    DASH            shift and go to state 20

    rule_footer                    shift and go to state 32
    rule_component                 shift and go to state 33
    include_statement              shift and go to state 17
    exclude_statement              shift and go to state 18
    component_statement            shift and go to state 19

state 16

    (20) list_rule_component -> rule_component .

    LBRACKET        reduce using rule 20 (list_rule_component -> rule_component .)
    DASH            reduce using rule 20 (list_rule_component -> rule_component .)


state 17

    (22) rule_component -> include_statement .

    LBRACKET        reduce using rule 22 (rule_component -> include_statement .)
    DASH            reduce using rule 22 (rule_component -> include_statement .)


state 18

    (23) rule_component -> exclude_statement .

    LBRACKET        reduce using rule 23 (rule_component -> exclude_statement .)
    DASH            reduce using rule 23 (rule_component -> exclude_statement .)


state 19

    (24) rule_component -> component_statement .

    LBRACKET        reduce using rule 24 (rule_component -> component_statement .)
    DASH            reduce using rule 24 (rule_component -> component_statement .)


state 20

    (25) include_statement -> DASH . INCLUDE COLON list_binary_item NEWLINE
    (30) exclude_statement -> DASH . EXCLUDE COLON list_binary_item NEWLINE
    (31) component_statement -> DASH . COMPONENT COLON IDENTIFIER NEWLINE

    INCLUDE         shift and go to state 35
    EXCLUDE         shift and go to state 36
    COMPONENT       shift and go to state 37


state 21

    (33) complete_component -> component_header format_statement . code_statement component_footer
    (36) code_statement -> . LCURLY NEWLINE list_cplusplus RCURLY NEWLINE

    LCURLY          shift and go to state 24

    code_statement                 shift and go to state 38

state 22

    (35) format_statement -> DASH . FORMAT COLON list_formatted_binary_item NEWLINE

    FORMAT          shift and go to state 39


state 23

    (50) complete_default -> default_header code_statement . default_footer
    (52) default_footer -> . LBRACKET SLASH DEFAULT RBRACKET NEWLINE

    LBRACKET        shift and go to state 41

    default_footer                 shift and go to state 40

state 24

    (36) code_statement -> LCURLY . NEWLINE list_cplusplus RCURLY NEWLINE

    NEWLINE         shift and go to state 42


state 25

    (8) settings_header -> LBRACKET SETTINGS . RBRACKET NEWLINE

    RBRACKET        shift and go to state 43


state 26

    (19) rule_header -> LBRACKET RULE . IDENTIFIER RBRACKET NEWLINE

    IDENTIFIER      shift and go to state 44


state 27

    (34) component_header -> LBRACKET COMPONENT . IDENTIFIER RBRACKET NEWLINE

    IDENTIFIER      shift and go to state 45


state 28

    (51) default_header -> LBRACKET DEFAULT . RBRACKET NEWLINE

    RBRACKET        shift and go to state 46


state 29

    (7) complete_settings -> settings_header name opcode_format . includes arguments settings_footer
    (11) includes -> . DASH INCLUDES COLON list_includes NEWLINE

    DASH            shift and go to state 48

    includes                       shift and go to state 47

state 30

    (10) opcode_format -> DASH . OPCODE_FORMAT COLON list_formatted_binary_item NEWLINE

    OPCODE_FORMAT   shift and go to state 49


state 31

    (9) name -> DASH NAMESPACE . COLON IDENTIFIER NEWLINE

    COLON           shift and go to state 50


state 32

    (18) complete_rule -> rule_header list_rule_component rule_footer .

    LBRACKET        reduce using rule 18 (complete_rule -> rule_header list_rule_component rule_footer .)
    $end            reduce using rule 18 (complete_rule -> rule_header list_rule_component rule_footer .)


state 33

    (21) list_rule_component -> list_rule_component rule_component .

    LBRACKET        reduce using rule 21 (list_rule_component -> list_rule_component rule_component .)
    DASH            reduce using rule 21 (list_rule_component -> list_rule_component rule_component .)


state 34

    (32) rule_footer -> LBRACKET . SLASH RULE RBRACKET NEWLINE

    SLASH           shift and go to state 51


state 35

    (25) include_statement -> DASH INCLUDE . COLON list_binary_item NEWLINE

    COLON           shift and go to state 52


state 36

    (30) exclude_statement -> DASH EXCLUDE . COLON list_binary_item NEWLINE

    COLON           shift and go to state 53


state 37

    (31) component_statement -> DASH COMPONENT . COLON IDENTIFIER NEWLINE

    COLON           shift and go to state 54


state 38

    (33) complete_component -> component_header format_statement code_statement . component_footer
    (49) component_footer -> . LBRACKET SLASH COMPONENT RBRACKET NEWLINE

    LBRACKET        shift and go to state 56

    component_footer               shift and go to state 55

state 39

    (35) format_statement -> DASH FORMAT . COLON list_formatted_binary_item NEWLINE

    COLON           shift and go to state 57


state 40

    (50) complete_default -> default_header code_statement default_footer .

    LBRACKET        reduce using rule 50 (complete_default -> default_header code_statement default_footer .)
    $end            reduce using rule 50 (complete_default -> default_header code_statement default_footer .)


state 41

    (52) default_footer -> LBRACKET . SLASH DEFAULT RBRACKET NEWLINE

    SLASH           shift and go to state 58


state 42

    (36) code_statement -> LCURLY NEWLINE . list_cplusplus RCURLY NEWLINE
    (37) list_cplusplus -> . WHITESPACE CPLUSPLUS NEWLINE
    (38) list_cplusplus -> . WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE
    (39) list_cplusplus -> . list_cplusplus WHITESPACE CPLUSPLUS NEWLINE
    (40) list_cplusplus -> . list_cplusplus WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE

    WHITESPACE      shift and go to state 60

    list_cplusplus                 shift and go to state 59

state 43

    (8) settings_header -> LBRACKET SETTINGS RBRACKET . NEWLINE

    NEWLINE         shift and go to state 61


state 44

    (19) rule_header -> LBRACKET RULE IDENTIFIER . RBRACKET NEWLINE

    RBRACKET        shift and go to state 62


state 45

    (34) component_header -> LBRACKET COMPONENT IDENTIFIER . RBRACKET NEWLINE

    RBRACKET        shift and go to state 63


state 46

    (51) default_header -> LBRACKET DEFAULT RBRACKET . NEWLINE

    NEWLINE         shift and go to state 64


state 47

    (7) complete_settings -> settings_header name opcode_format includes . arguments settings_footer
    (14) arguments -> . DASH ARGUMENTS COLON list_arguments NEWLINE

    DASH            shift and go to state 66

    arguments                      shift and go to state 65

state 48

    (11) includes -> DASH . INCLUDES COLON list_includes NEWLINE

    INCLUDES        shift and go to state 67


state 49

    (10) opcode_format -> DASH OPCODE_FORMAT . COLON list_formatted_binary_item NEWLINE

    COLON           shift and go to state 68


state 50

    (9) name -> DASH NAMESPACE COLON . IDENTIFIER NEWLINE

    IDENTIFIER      shift and go to state 69


state 51

    (32) rule_footer -> LBRACKET SLASH . RULE RBRACKET NEWLINE

    RULE            shift and go to state 70


state 52

    (25) include_statement -> DASH INCLUDE COLON . list_binary_item NEWLINE
    (26) list_binary_item -> . binary_item
    (27) list_binary_item -> . list_binary_item binary_item
    (28) binary_item -> . BINARY
    (29) binary_item -> . DASH

    BINARY          shift and go to state 74
    DASH            shift and go to state 71

    list_binary_item               shift and go to state 72
    binary_item                    shift and go to state 73

state 53

    (30) exclude_statement -> DASH EXCLUDE COLON . list_binary_item NEWLINE
    (26) list_binary_item -> . binary_item
    (27) list_binary_item -> . list_binary_item binary_item
    (28) binary_item -> . BINARY
    (29) binary_item -> . DASH

    BINARY          shift and go to state 74
    DASH            shift and go to state 71

    list_binary_item               shift and go to state 75
    binary_item                    shift and go to state 73

state 54

    (31) component_statement -> DASH COMPONENT COLON . IDENTIFIER NEWLINE

    IDENTIFIER      shift and go to state 76


state 55

    (33) complete_component -> component_header format_statement code_statement component_footer .

    LBRACKET        reduce using rule 33 (complete_component -> component_header format_statement code_statement component_footer .)
    $end            reduce using rule 33 (complete_component -> component_header format_statement code_statement component_footer .)


state 56

    (49) component_footer -> LBRACKET . SLASH COMPONENT RBRACKET NEWLINE

    SLASH           shift and go to state 77


state 57

    (35) format_statement -> DASH FORMAT COLON . list_formatted_binary_item NEWLINE
    (45) list_formatted_binary_item -> . formatted_binary_item
    (46) list_formatted_binary_item -> . list_formatted_binary_item formatted_binary_item
    (47) formatted_binary_item -> . binary_item
    (48) formatted_binary_item -> . BINARY_VARIABLE
    (28) binary_item -> . BINARY
    (29) binary_item -> . DASH

    BINARY_VARIABLE shift and go to state 81
    BINARY          shift and go to state 74
    DASH            shift and go to state 71

    list_formatted_binary_item     shift and go to state 78
    formatted_binary_item          shift and go to state 79
    binary_item                    shift and go to state 80

state 58

    (52) default_footer -> LBRACKET SLASH . DEFAULT RBRACKET NEWLINE

    DEFAULT         shift and go to state 82


state 59

    (36) code_statement -> LCURLY NEWLINE list_cplusplus . RCURLY NEWLINE
    (39) list_cplusplus -> list_cplusplus . WHITESPACE CPLUSPLUS NEWLINE
    (40) list_cplusplus -> list_cplusplus . WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE

    RCURLY          shift and go to state 83
    WHITESPACE      shift and go to state 84


state 60

    (37) list_cplusplus -> WHITESPACE . CPLUSPLUS NEWLINE
    (38) list_cplusplus -> WHITESPACE . IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE

    CPLUSPLUS       shift and go to state 85
    IF_BEGIN        shift and go to state 86


state 61

    (8) settings_header -> LBRACKET SETTINGS RBRACKET NEWLINE .

    DASH            reduce using rule 8 (settings_header -> LBRACKET SETTINGS RBRACKET NEWLINE .)


state 62

    (19) rule_header -> LBRACKET RULE IDENTIFIER RBRACKET . NEWLINE

    NEWLINE         shift and go to state 87


state 63

    (34) component_header -> LBRACKET COMPONENT IDENTIFIER RBRACKET . NEWLINE

    NEWLINE         shift and go to state 88


state 64

    (51) default_header -> LBRACKET DEFAULT RBRACKET NEWLINE .

    LCURLY          reduce using rule 51 (default_header -> LBRACKET DEFAULT RBRACKET NEWLINE .)


state 65

    (7) complete_settings -> settings_header name opcode_format includes arguments . settings_footer
    (17) settings_footer -> . LBRACKET SLASH SETTINGS RBRACKET NEWLINE

    LBRACKET        shift and go to state 90

    settings_footer                shift and go to state 89

state 66

    (14) arguments -> DASH . ARGUMENTS COLON list_arguments NEWLINE

    ARGUMENTS       shift and go to state 91


state 67

    (11) includes -> DASH INCLUDES . COLON list_includes NEWLINE

    COLON           shift and go to state 92


state 68

    (10) opcode_format -> DASH OPCODE_FORMAT COLON . list_formatted_binary_item NEWLINE
    (45) list_formatted_binary_item -> . formatted_binary_item
    (46) list_formatted_binary_item -> . list_formatted_binary_item formatted_binary_item
    (47) formatted_binary_item -> . binary_item
    (48) formatted_binary_item -> . BINARY_VARIABLE
    (28) binary_item -> . BINARY
    (29) binary_item -> . DASH

    BINARY_VARIABLE shift and go to state 81
    BINARY          shift and go to state 74
    DASH            shift and go to state 71

    list_formatted_binary_item     shift and go to state 93
    formatted_binary_item          shift and go to state 79
    binary_item                    shift and go to state 80

state 69

    (9) name -> DASH NAMESPACE COLON IDENTIFIER . NEWLINE

    NEWLINE         shift and go to state 94


state 70

    (32) rule_footer -> LBRACKET SLASH RULE . RBRACKET NEWLINE

    RBRACKET        shift and go to state 95


state 71

    (29) binary_item -> DASH .

    NEWLINE         reduce using rule 29 (binary_item -> DASH .)
    BINARY          reduce using rule 29 (binary_item -> DASH .)
    DASH            reduce using rule 29 (binary_item -> DASH .)
    BINARY_VARIABLE reduce using rule 29 (binary_item -> DASH .)


state 72

    (25) include_statement -> DASH INCLUDE COLON list_binary_item . NEWLINE
    (27) list_binary_item -> list_binary_item . binary_item
    (28) binary_item -> . BINARY
    (29) binary_item -> . DASH

    NEWLINE         shift and go to state 96
    BINARY          shift and go to state 74
    DASH            shift and go to state 71

    binary_item                    shift and go to state 97

state 73

    (26) list_binary_item -> binary_item .

    NEWLINE         reduce using rule 26 (list_binary_item -> binary_item .)
    BINARY          reduce using rule 26 (list_binary_item -> binary_item .)
    DASH            reduce using rule 26 (list_binary_item -> binary_item .)


state 74

    (28) binary_item -> BINARY .

    NEWLINE         reduce using rule 28 (binary_item -> BINARY .)
    BINARY          reduce using rule 28 (binary_item -> BINARY .)
    DASH            reduce using rule 28 (binary_item -> BINARY .)
    BINARY_VARIABLE reduce using rule 28 (binary_item -> BINARY .)


state 75

    (30) exclude_statement -> DASH EXCLUDE COLON list_binary_item . NEWLINE
    (27) list_binary_item -> list_binary_item . binary_item
    (28) binary_item -> . BINARY
    (29) binary_item -> . DASH

    NEWLINE         shift and go to state 98
    BINARY          shift and go to state 74
    DASH            shift and go to state 71

    binary_item                    shift and go to state 97

state 76

    (31) component_statement -> DASH COMPONENT COLON IDENTIFIER . NEWLINE

    NEWLINE         shift and go to state 99


state 77

    (49) component_footer -> LBRACKET SLASH . COMPONENT RBRACKET NEWLINE

    COMPONENT       shift and go to state 100


state 78

    (35) format_statement -> DASH FORMAT COLON list_formatted_binary_item . NEWLINE
    (46) list_formatted_binary_item -> list_formatted_binary_item . formatted_binary_item
    (47) formatted_binary_item -> . binary_item
    (48) formatted_binary_item -> . BINARY_VARIABLE
    (28) binary_item -> . BINARY
    (29) binary_item -> . DASH

    NEWLINE         shift and go to state 101
    BINARY_VARIABLE shift and go to state 81
    BINARY          shift and go to state 74
    DASH            shift and go to state 71

    formatted_binary_item          shift and go to state 102
    binary_item                    shift and go to state 80

state 79

    (45) list_formatted_binary_item -> formatted_binary_item .

    NEWLINE         reduce using rule 45 (list_formatted_binary_item -> formatted_binary_item .)
    BINARY_VARIABLE reduce using rule 45 (list_formatted_binary_item -> formatted_binary_item .)
    BINARY          reduce using rule 45 (list_formatted_binary_item -> formatted_binary_item .)
    DASH            reduce using rule 45 (list_formatted_binary_item -> formatted_binary_item .)


state 80

    (47) formatted_binary_item -> binary_item .

    NEWLINE         reduce using rule 47 (formatted_binary_item -> binary_item .)
    BINARY_VARIABLE reduce using rule 47 (formatted_binary_item -> binary_item .)
    BINARY          reduce using rule 47 (formatted_binary_item -> binary_item .)
    DASH            reduce using rule 47 (formatted_binary_item -> binary_item .)


state 81

    (48) formatted_binary_item -> BINARY_VARIABLE .

    NEWLINE         reduce using rule 48 (formatted_binary_item -> BINARY_VARIABLE .)
    BINARY_VARIABLE reduce using rule 48 (formatted_binary_item -> BINARY_VARIABLE .)
    BINARY          reduce using rule 48 (formatted_binary_item -> BINARY_VARIABLE .)
    DASH            reduce using rule 48 (formatted_binary_item -> BINARY_VARIABLE .)


state 82

    (52) default_footer -> LBRACKET SLASH DEFAULT . RBRACKET NEWLINE

    RBRACKET        shift and go to state 103


state 83

    (36) code_statement -> LCURLY NEWLINE list_cplusplus RCURLY . NEWLINE

    NEWLINE         shift and go to state 104


state 84

    (39) list_cplusplus -> list_cplusplus WHITESPACE . CPLUSPLUS NEWLINE
    (40) list_cplusplus -> list_cplusplus WHITESPACE . IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE

    CPLUSPLUS       shift and go to state 105
    IF_BEGIN        shift and go to state 106


state 85

    (37) list_cplusplus -> WHITESPACE CPLUSPLUS . NEWLINE

    NEWLINE         shift and go to state 107


state 86

    (38) list_cplusplus -> WHITESPACE IF_BEGIN . list_bitvariable IF_END CPLUSPLUS NEWLINE
    (41) list_bitvariable -> . bitvariable
    (42) list_bitvariable -> . list_bitvariable bitvariable
    (43) bitvariable -> . TRUE_BITVARIABLE
    (44) bitvariable -> . FALSE_BITVARIABLE

    TRUE_BITVARIABLE shift and go to state 110
    FALSE_BITVARIABLE shift and go to state 111

    list_bitvariable               shift and go to state 108
    bitvariable                    shift and go to state 109

state 87

    (19) rule_header -> LBRACKET RULE IDENTIFIER RBRACKET NEWLINE .

    DASH            reduce using rule 19 (rule_header -> LBRACKET RULE IDENTIFIER RBRACKET NEWLINE .)


state 88

    (34) component_header -> LBRACKET COMPONENT IDENTIFIER RBRACKET NEWLINE .

    DASH            reduce using rule 34 (component_header -> LBRACKET COMPONENT IDENTIFIER RBRACKET NEWLINE .)


state 89

    (7) complete_settings -> settings_header name opcode_format includes arguments settings_footer .

    LBRACKET        reduce using rule 7 (complete_settings -> settings_header name opcode_format includes arguments settings_footer .)
    $end            reduce using rule 7 (complete_settings -> settings_header name opcode_format includes arguments settings_footer .)


state 90

    (17) settings_footer -> LBRACKET . SLASH SETTINGS RBRACKET NEWLINE

    SLASH           shift and go to state 112


state 91

    (14) arguments -> DASH ARGUMENTS . COLON list_arguments NEWLINE

    COLON           shift and go to state 113


state 92

    (11) includes -> DASH INCLUDES COLON . list_includes NEWLINE
    (12) list_includes -> . IDENTIFIER
    (13) list_includes -> . list_includes IDENTIFIER

    IDENTIFIER      shift and go to state 115

    list_includes                  shift and go to state 114

state 93

    (10) opcode_format -> DASH OPCODE_FORMAT COLON list_formatted_binary_item . NEWLINE
    (46) list_formatted_binary_item -> list_formatted_binary_item . formatted_binary_item
    (47) formatted_binary_item -> . binary_item
    (48) formatted_binary_item -> . BINARY_VARIABLE
    (28) binary_item -> . BINARY
    (29) binary_item -> . DASH

    NEWLINE         shift and go to state 116
    BINARY_VARIABLE shift and go to state 81
    BINARY          shift and go to state 74
    DASH            shift and go to state 71

    formatted_binary_item          shift and go to state 102
    binary_item                    shift and go to state 80

state 94

    (9) name -> DASH NAMESPACE COLON IDENTIFIER NEWLINE .

    DASH            reduce using rule 9 (name -> DASH NAMESPACE COLON IDENTIFIER NEWLINE .)


state 95

    (32) rule_footer -> LBRACKET SLASH RULE RBRACKET . NEWLINE

    NEWLINE         shift and go to state 117


state 96

    (25) include_statement -> DASH INCLUDE COLON list_binary_item NEWLINE .

    LBRACKET        reduce using rule 25 (include_statement -> DASH INCLUDE COLON list_binary_item NEWLINE .)
    DASH            reduce using rule 25 (include_statement -> DASH INCLUDE COLON list_binary_item NEWLINE .)


state 97

    (27) list_binary_item -> list_binary_item binary_item .

    NEWLINE         reduce using rule 27 (list_binary_item -> list_binary_item binary_item .)
    BINARY          reduce using rule 27 (list_binary_item -> list_binary_item binary_item .)
    DASH            reduce using rule 27 (list_binary_item -> list_binary_item binary_item .)


state 98

    (30) exclude_statement -> DASH EXCLUDE COLON list_binary_item NEWLINE .

    LBRACKET        reduce using rule 30 (exclude_statement -> DASH EXCLUDE COLON list_binary_item NEWLINE .)
    DASH            reduce using rule 30 (exclude_statement -> DASH EXCLUDE COLON list_binary_item NEWLINE .)


state 99

    (31) component_statement -> DASH COMPONENT COLON IDENTIFIER NEWLINE .

    LBRACKET        reduce using rule 31 (component_statement -> DASH COMPONENT COLON IDENTIFIER NEWLINE .)
    DASH            reduce using rule 31 (component_statement -> DASH COMPONENT COLON IDENTIFIER NEWLINE .)


state 100

    (49) component_footer -> LBRACKET SLASH COMPONENT . RBRACKET NEWLINE

    RBRACKET        shift and go to state 118


state 101

    (35) format_statement -> DASH FORMAT COLON list_formatted_binary_item NEWLINE .

    LCURLY          reduce using rule 35 (format_statement -> DASH FORMAT COLON list_formatted_binary_item NEWLINE .)


state 102

    (46) list_formatted_binary_item -> list_formatted_binary_item formatted_binary_item .

    NEWLINE         reduce using rule 46 (list_formatted_binary_item -> list_formatted_binary_item formatted_binary_item .)
    BINARY_VARIABLE reduce using rule 46 (list_formatted_binary_item -> list_formatted_binary_item formatted_binary_item .)
    BINARY          reduce using rule 46 (list_formatted_binary_item -> list_formatted_binary_item formatted_binary_item .)
    DASH            reduce using rule 46 (list_formatted_binary_item -> list_formatted_binary_item formatted_binary_item .)


state 103

    (52) default_footer -> LBRACKET SLASH DEFAULT RBRACKET . NEWLINE

    NEWLINE         shift and go to state 119


state 104

    (36) code_statement -> LCURLY NEWLINE list_cplusplus RCURLY NEWLINE .

    LBRACKET        reduce using rule 36 (code_statement -> LCURLY NEWLINE list_cplusplus RCURLY NEWLINE .)


state 105

    (39) list_cplusplus -> list_cplusplus WHITESPACE CPLUSPLUS . NEWLINE

    NEWLINE         shift and go to state 120


state 106

    (40) list_cplusplus -> list_cplusplus WHITESPACE IF_BEGIN . list_bitvariable IF_END CPLUSPLUS NEWLINE
    (41) list_bitvariable -> . bitvariable
    (42) list_bitvariable -> . list_bitvariable bitvariable
    (43) bitvariable -> . TRUE_BITVARIABLE
    (44) bitvariable -> . FALSE_BITVARIABLE

    TRUE_BITVARIABLE shift and go to state 110
    FALSE_BITVARIABLE shift and go to state 111

    list_bitvariable               shift and go to state 121
    bitvariable                    shift and go to state 109

state 107

    (37) list_cplusplus -> WHITESPACE CPLUSPLUS NEWLINE .

    RCURLY          reduce using rule 37 (list_cplusplus -> WHITESPACE CPLUSPLUS NEWLINE .)
    WHITESPACE      reduce using rule 37 (list_cplusplus -> WHITESPACE CPLUSPLUS NEWLINE .)


state 108

    (38) list_cplusplus -> WHITESPACE IF_BEGIN list_bitvariable . IF_END CPLUSPLUS NEWLINE
    (42) list_bitvariable -> list_bitvariable . bitvariable
    (43) bitvariable -> . TRUE_BITVARIABLE
    (44) bitvariable -> . FALSE_BITVARIABLE

    IF_END          shift and go to state 122
    TRUE_BITVARIABLE shift and go to state 110
    FALSE_BITVARIABLE shift and go to state 111

    bitvariable                    shift and go to state 123

state 109

    (41) list_bitvariable -> bitvariable .

    IF_END          reduce using rule 41 (list_bitvariable -> bitvariable .)
    TRUE_BITVARIABLE reduce using rule 41 (list_bitvariable -> bitvariable .)
    FALSE_BITVARIABLE reduce using rule 41 (list_bitvariable -> bitvariable .)


state 110

    (43) bitvariable -> TRUE_BITVARIABLE .

    IF_END          reduce using rule 43 (bitvariable -> TRUE_BITVARIABLE .)
    TRUE_BITVARIABLE reduce using rule 43 (bitvariable -> TRUE_BITVARIABLE .)
    FALSE_BITVARIABLE reduce using rule 43 (bitvariable -> TRUE_BITVARIABLE .)


state 111

    (44) bitvariable -> FALSE_BITVARIABLE .

    IF_END          reduce using rule 44 (bitvariable -> FALSE_BITVARIABLE .)
    TRUE_BITVARIABLE reduce using rule 44 (bitvariable -> FALSE_BITVARIABLE .)
    FALSE_BITVARIABLE reduce using rule 44 (bitvariable -> FALSE_BITVARIABLE .)


state 112

    (17) settings_footer -> LBRACKET SLASH . SETTINGS RBRACKET NEWLINE

    SETTINGS        shift and go to state 124


state 113

    (14) arguments -> DASH ARGUMENTS COLON . list_arguments NEWLINE
    (15) list_arguments -> . IDENTIFIER
    (16) list_arguments -> . list_arguments IDENTIFIER

    IDENTIFIER      shift and go to state 126

    list_arguments                 shift and go to state 125

state 114

    (11) includes -> DASH INCLUDES COLON list_includes . NEWLINE
    (13) list_includes -> list_includes . IDENTIFIER

    NEWLINE         shift and go to state 127
    IDENTIFIER      shift and go to state 128


state 115

    (12) list_includes -> IDENTIFIER .

    NEWLINE         reduce using rule 12 (list_includes -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 12 (list_includes -> IDENTIFIER .)


state 116

    (10) opcode_format -> DASH OPCODE_FORMAT COLON list_formatted_binary_item NEWLINE .

    DASH            reduce using rule 10 (opcode_format -> DASH OPCODE_FORMAT COLON list_formatted_binary_item NEWLINE .)


state 117

    (32) rule_footer -> LBRACKET SLASH RULE RBRACKET NEWLINE .

    LBRACKET        reduce using rule 32 (rule_footer -> LBRACKET SLASH RULE RBRACKET NEWLINE .)
    $end            reduce using rule 32 (rule_footer -> LBRACKET SLASH RULE RBRACKET NEWLINE .)


state 118

    (49) component_footer -> LBRACKET SLASH COMPONENT RBRACKET . NEWLINE

    NEWLINE         shift and go to state 129


state 119

    (52) default_footer -> LBRACKET SLASH DEFAULT RBRACKET NEWLINE .

    LBRACKET        reduce using rule 52 (default_footer -> LBRACKET SLASH DEFAULT RBRACKET NEWLINE .)
    $end            reduce using rule 52 (default_footer -> LBRACKET SLASH DEFAULT RBRACKET NEWLINE .)


state 120

    (39) list_cplusplus -> list_cplusplus WHITESPACE CPLUSPLUS NEWLINE .

    RCURLY          reduce using rule 39 (list_cplusplus -> list_cplusplus WHITESPACE CPLUSPLUS NEWLINE .)
    WHITESPACE      reduce using rule 39 (list_cplusplus -> list_cplusplus WHITESPACE CPLUSPLUS NEWLINE .)


state 121

    (40) list_cplusplus -> list_cplusplus WHITESPACE IF_BEGIN list_bitvariable . IF_END CPLUSPLUS NEWLINE
    (42) list_bitvariable -> list_bitvariable . bitvariable
    (43) bitvariable -> . TRUE_BITVARIABLE
    (44) bitvariable -> . FALSE_BITVARIABLE

    IF_END          shift and go to state 130
    TRUE_BITVARIABLE shift and go to state 110
    FALSE_BITVARIABLE shift and go to state 111

    bitvariable                    shift and go to state 123

state 122

    (38) list_cplusplus -> WHITESPACE IF_BEGIN list_bitvariable IF_END . CPLUSPLUS NEWLINE

    CPLUSPLUS       shift and go to state 131


state 123

    (42) list_bitvariable -> list_bitvariable bitvariable .

    IF_END          reduce using rule 42 (list_bitvariable -> list_bitvariable bitvariable .)
    TRUE_BITVARIABLE reduce using rule 42 (list_bitvariable -> list_bitvariable bitvariable .)
    FALSE_BITVARIABLE reduce using rule 42 (list_bitvariable -> list_bitvariable bitvariable .)


state 124

    (17) settings_footer -> LBRACKET SLASH SETTINGS . RBRACKET NEWLINE

    RBRACKET        shift and go to state 132


state 125

    (14) arguments -> DASH ARGUMENTS COLON list_arguments . NEWLINE
    (16) list_arguments -> list_arguments . IDENTIFIER

    NEWLINE         shift and go to state 133
    IDENTIFIER      shift and go to state 134


state 126

    (15) list_arguments -> IDENTIFIER .

    NEWLINE         reduce using rule 15 (list_arguments -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 15 (list_arguments -> IDENTIFIER .)


state 127

    (11) includes -> DASH INCLUDES COLON list_includes NEWLINE .

    DASH            reduce using rule 11 (includes -> DASH INCLUDES COLON list_includes NEWLINE .)


state 128

    (13) list_includes -> list_includes IDENTIFIER .

    NEWLINE         reduce using rule 13 (list_includes -> list_includes IDENTIFIER .)
    IDENTIFIER      reduce using rule 13 (list_includes -> list_includes IDENTIFIER .)


state 129

    (49) component_footer -> LBRACKET SLASH COMPONENT RBRACKET NEWLINE .

    LBRACKET        reduce using rule 49 (component_footer -> LBRACKET SLASH COMPONENT RBRACKET NEWLINE .)
    $end            reduce using rule 49 (component_footer -> LBRACKET SLASH COMPONENT RBRACKET NEWLINE .)


state 130

    (40) list_cplusplus -> list_cplusplus WHITESPACE IF_BEGIN list_bitvariable IF_END . CPLUSPLUS NEWLINE

    CPLUSPLUS       shift and go to state 135


state 131

    (38) list_cplusplus -> WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS . NEWLINE

    NEWLINE         shift and go to state 136


state 132

    (17) settings_footer -> LBRACKET SLASH SETTINGS RBRACKET . NEWLINE

    NEWLINE         shift and go to state 137


state 133

    (14) arguments -> DASH ARGUMENTS COLON list_arguments NEWLINE .

    LBRACKET        reduce using rule 14 (arguments -> DASH ARGUMENTS COLON list_arguments NEWLINE .)


state 134

    (16) list_arguments -> list_arguments IDENTIFIER .

    NEWLINE         reduce using rule 16 (list_arguments -> list_arguments IDENTIFIER .)
    IDENTIFIER      reduce using rule 16 (list_arguments -> list_arguments IDENTIFIER .)


state 135

    (40) list_cplusplus -> list_cplusplus WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS . NEWLINE

    NEWLINE         shift and go to state 138


state 136

    (38) list_cplusplus -> WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE .

    RCURLY          reduce using rule 38 (list_cplusplus -> WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE .)
    WHITESPACE      reduce using rule 38 (list_cplusplus -> WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE .)


state 137

    (17) settings_footer -> LBRACKET SLASH SETTINGS RBRACKET NEWLINE .

    LBRACKET        reduce using rule 17 (settings_footer -> LBRACKET SLASH SETTINGS RBRACKET NEWLINE .)
    $end            reduce using rule 17 (settings_footer -> LBRACKET SLASH SETTINGS RBRACKET NEWLINE .)


state 138

    (40) list_cplusplus -> list_cplusplus WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE .

    RCURLY          reduce using rule 40 (list_cplusplus -> list_cplusplus WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE .)
    WHITESPACE      reduce using rule 40 (list_cplusplus -> list_cplusplus WHITESPACE IF_BEGIN list_bitvariable IF_END CPLUSPLUS NEWLINE .)

