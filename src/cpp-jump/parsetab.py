
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BINARY BINARY_VARIABLE COLON COMPONENT DASH EXCLUDE FORMAT IDENTIFIER INCLUDE LBRACKET NEWLINE RBRACKET RULE SLASHlist_complete_item : complete_itemlist_complete_item : list_complete_item complete_itemcomplete_item : complete_rule\n                     | complete_componentcomplete_rule : rule_header list_rule_component rule_footerrule_header : LBRACKET RULE IDENTIFIER RBRACKET NEWLINElist_rule_component : rule_componentlist_rule_component : list_rule_component rule_componentrule_component : include_statement\n                      | exclude_statement\n                      | component_statementinclude_statement : DASH INCLUDE COLON list_binary_item NEWLINElist_binary_item : binary_itemlist_binary_item : list_binary_item binary_itembinary_item : BINARY\n                   | DASHexclude_statement : DASH EXCLUDE COLON list_binary_item NEWLINEcomponent_statement : DASH COMPONENT COLON IDENTIFIER NEWLINErule_footer : LBRACKET SLASH RULE RBRACKET NEWLINEcomplete_component : component_header format_statement component_footercomponent_header : LBRACKET COMPONENT IDENTIFIER RBRACKET NEWLINEformat_statement : DASH FORMAT COLON list_formatted_binary_item NEWLINElist_formatted_binary_item : formatted_binary_itemlist_formatted_binary_item : list_formatted_binary_item formatted_binary_itemformatted_binary_item : binary_item\n                             | BINARY_VARIABLEcomponent_footer : LBRACKET SLASH COMPONENT RBRACKET NEWLINE'
    
_lr_action_items = {'LBRACKET':([0,1,2,3,4,8,9,10,11,12,13,15,19,20,25,53,55,56,58,60,61,],[7,7,-1,-3,-4,-2,21,-7,-9,-10,-11,26,-5,-8,-20,-12,-17,-18,-22,-19,-27,]),'$end':([1,2,3,4,8,19,25,60,61,],[0,-1,-3,-4,-2,-5,-20,-19,-27,]),'DASH':([5,6,9,10,11,12,13,20,31,32,35,39,40,41,42,43,46,47,48,49,50,51,53,54,55,56,59,],[14,16,14,-7,-9,-10,-11,-8,39,39,39,-16,39,-13,-15,39,39,-23,-25,-26,-6,-21,-12,-14,-17,-18,-24,]),'RULE':([7,30,],[17,38,]),'COMPONENT':([7,14,34,],[18,24,45,]),'INCLUDE':([14,],[22,]),'EXCLUDE':([14,],[23,]),'FORMAT':([16,],[27,]),'IDENTIFIER':([17,18,33,],[28,29,44,]),'SLASH':([21,26,],[30,34,]),'COLON':([22,23,24,27,],[31,32,33,35,]),'RBRACKET':([28,29,38,45,],[36,37,52,57,]),'BINARY':([31,32,35,39,40,41,42,43,46,47,48,49,54,59,],[42,42,42,-16,42,-13,-15,42,42,-23,-25,-26,-14,-24,]),'BINARY_VARIABLE':([35,39,42,46,47,48,49,59,],[49,-16,-15,49,-23,-25,-26,-24,]),'NEWLINE':([36,37,39,40,41,42,43,44,46,47,48,49,52,54,57,59,],[50,51,-16,53,-13,-15,55,56,58,-23,-25,-26,60,-14,61,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'list_complete_item':([0,],[1,]),'complete_item':([0,1,],[2,8,]),'complete_rule':([0,1,],[3,3,]),'complete_component':([0,1,],[4,4,]),'rule_header':([0,1,],[5,5,]),'component_header':([0,1,],[6,6,]),'list_rule_component':([5,],[9,]),'rule_component':([5,9,],[10,20,]),'include_statement':([5,9,],[11,11,]),'exclude_statement':([5,9,],[12,12,]),'component_statement':([5,9,],[13,13,]),'format_statement':([6,],[15,]),'rule_footer':([9,],[19,]),'component_footer':([15,],[25,]),'list_binary_item':([31,32,],[40,43,]),'binary_item':([31,32,35,40,43,46,],[41,41,48,54,54,48,]),'list_formatted_binary_item':([35,],[46,]),'formatted_binary_item':([35,46,],[47,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> list_complete_item","S'",1,None,None,None),
  ('list_complete_item -> complete_item','list_complete_item',1,'p_list_complete_item_single','cpp-jump-compiler.py',198),
  ('list_complete_item -> list_complete_item complete_item','list_complete_item',2,'p_list_complete_item_group','cpp-jump-compiler.py',202),
  ('complete_item -> complete_rule','complete_item',1,'p_complete_item','cpp-jump-compiler.py',206),
  ('complete_item -> complete_component','complete_item',1,'p_complete_item','cpp-jump-compiler.py',207),
  ('complete_rule -> rule_header list_rule_component rule_footer','complete_rule',3,'p_complete_rule','cpp-jump-compiler.py',211),
  ('rule_header -> LBRACKET RULE IDENTIFIER RBRACKET NEWLINE','rule_header',5,'p_rule_header','cpp-jump-compiler.py',215),
  ('list_rule_component -> rule_component','list_rule_component',1,'p_list_rule_component_single','cpp-jump-compiler.py',219),
  ('list_rule_component -> list_rule_component rule_component','list_rule_component',2,'p_list_rule_component_group','cpp-jump-compiler.py',223),
  ('rule_component -> include_statement','rule_component',1,'p_rule_component','cpp-jump-compiler.py',227),
  ('rule_component -> exclude_statement','rule_component',1,'p_rule_component','cpp-jump-compiler.py',228),
  ('rule_component -> component_statement','rule_component',1,'p_rule_component','cpp-jump-compiler.py',229),
  ('include_statement -> DASH INCLUDE COLON list_binary_item NEWLINE','include_statement',5,'p_include_statement','cpp-jump-compiler.py',233),
  ('list_binary_item -> binary_item','list_binary_item',1,'p_list_binary_item_single','cpp-jump-compiler.py',237),
  ('list_binary_item -> list_binary_item binary_item','list_binary_item',2,'p_list_binary_item_group','cpp-jump-compiler.py',241),
  ('binary_item -> BINARY','binary_item',1,'p_binary_item','cpp-jump-compiler.py',245),
  ('binary_item -> DASH','binary_item',1,'p_binary_item','cpp-jump-compiler.py',246),
  ('exclude_statement -> DASH EXCLUDE COLON list_binary_item NEWLINE','exclude_statement',5,'p_exclude_statement','cpp-jump-compiler.py',250),
  ('component_statement -> DASH COMPONENT COLON IDENTIFIER NEWLINE','component_statement',5,'p_component_statement','cpp-jump-compiler.py',254),
  ('rule_footer -> LBRACKET SLASH RULE RBRACKET NEWLINE','rule_footer',5,'p_rule_footer','cpp-jump-compiler.py',258),
  ('complete_component -> component_header format_statement component_footer','complete_component',3,'p_complete_component','cpp-jump-compiler.py',261),
  ('component_header -> LBRACKET COMPONENT IDENTIFIER RBRACKET NEWLINE','component_header',5,'p_component_header','cpp-jump-compiler.py',265),
  ('format_statement -> DASH FORMAT COLON list_formatted_binary_item NEWLINE','format_statement',5,'p_format_statement','cpp-jump-compiler.py',268),
  ('list_formatted_binary_item -> formatted_binary_item','list_formatted_binary_item',1,'p_list_formatted_binary_item_single','cpp-jump-compiler.py',272),
  ('list_formatted_binary_item -> list_formatted_binary_item formatted_binary_item','list_formatted_binary_item',2,'p_list_formatted_binary_item_group','cpp-jump-compiler.py',276),
  ('formatted_binary_item -> binary_item','formatted_binary_item',1,'p_formatted_binary_item','cpp-jump-compiler.py',280),
  ('formatted_binary_item -> BINARY_VARIABLE','formatted_binary_item',1,'p_formatted_binary_item','cpp-jump-compiler.py',281),
  ('component_footer -> LBRACKET SLASH COMPONENT RBRACKET NEWLINE','component_footer',5,'p_component_footer','cpp-jump-compiler.py',285),
]
